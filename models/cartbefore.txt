const fs = require('fs');
const path = require('path');

const p = path.join(
    path.dirname(process.mainModule.filename), 
    'data', 
    'cart.json'
);


module.exports = class Cart {
    static addProduct(id, productPrice) {
        // Fetch the previous cart from cart.json
        fs.readFile(p, (err, fileContent) => {
            let cart = {products:[], totalPrice:0};
            if (!err) { // no error -> we actually found the cart!
                cart = JSON.parse(fileContent);
            }
            // Analyze the cart to find if there existing the product we want.
            const existingProductIndex = cart.products.findIndex(prod => prod.id === id);
            const existingProduct = cart.products[existingProductIndex];
            let updatedProduct;
            if (existingProduct) {
                updatedProduct = {...existingProduct};
                updatedProduct.qty = updatedProduct.qty + 1;
                cart.products = [...cart.products];
                cart.products[existingProductIndex] = updatedProduct;
            } else {
                updatedProduct = {id: id, qty: 1};
                cart.products = [...cart.products, updatedProduct];
            }
            cart.totalPrice = cart.totalPrice + +productPrice;
            fs.writeFile(p, JSON.stringify(cart), err => {
                console.log(err);
            });
        });
    };

    static deleteProduct(id, productPrice) {
        fs.readFile(p, (err, fileContent) => {
            let cart = {products:[], totalPrice:0};
            if (!err) { // no error -> we actually found the cart!
                cart = JSON.parse(fileContent);
            } else {
                return;
            }
            const updatedCart = {...cart};
            const product= updatedCart.products.find(prod => prod.id === id);
            if (!product) { return;}
            const productQty = product.qty;
            updatedCart.totalPrice = cart.totalPrice - productQty * productPrice;
            updatedCart.products = updatedCart.products.filter(prod => prod.id !== id);
            fs.writeFile(p, JSON.stringify(updatedCart), err => {
                console.log(err);
            });
        });
    };

    static getCart(callback) {
        fs.readFile(p, (err, fileContent) => {
            if (err) { 
                callback(null);
            }
            const cart = JSON.parse(fileContent);
            callback(cart);
        });
    };
};